#define trigOne 7
#define echoOne 8
#define trigTwo 3
#define echoTwo 4
#define irOne 13
#define irTwo 12
#define in1 6
#define in2 5
#define in3 11
#define in4 10

// fixa funktioner för varje sväng och snurr och diverse
// SÄNK PWM-VÄRDENA OM VI FIXAR 9-VOLT

int colorRead(int x)
{
  int val;
  val = digitalRead(x);
  if (val == 0)
  {
    return true;
  }
  else
  {
    return false;
  }
}

void backa()
{
  digitalWrite(in1, 0);
  digitalWrite(in2, 255);
  digitalWrite(in3, 0);
  digitalWrite(in4, 255);
}

void systemFail()
{
  Serial.print("systemFail");
  int valOne, valTwo;
  backa();
  delay(100);
  valOne = colorRead(irOne);
  valTwo = colorRead(irTwo);
  if ((valOne && valTwo) == false)
  {
    backa();
  }
  delay(1000);
  digitalWrite(in1, 0);
  digitalWrite(in2, 180);
  digitalWrite(in3, 180);
  digitalWrite(in4, 0);
  delay(50); // bestäm värdet på denna
}

long distanceRead(int x, int y)
{
  long pulse, distance;
  digitalWrite(x, LOW);
  delayMicroseconds(2);
  digitalWrite(x, HIGH);
  delayMicroseconds(10);
  digitalWrite(x, LOW);
  pulse = pulseIn(y, HIGH);
  distance = (pulse * 0.034 / 2);
  return distance;
}

void motorControl(int x)
{
  Serial.println(x);
  if (x == 1)
  {
    analogWrite(in1, 255);
    analogWrite(in2, 0);
    analogWrite(in3, 0);
    analogWrite(in4, 255);
  }
  else if (x == -1)
  {
    analogWrite(in1, 0);
    analogWrite(in2, 255);
    analogWrite(in3, 255);
    analogWrite(in4, 0);
  }
  else if (x == 0)
  {
    analogWrite(in1, 255);
    analogWrite(in2, 0);
    analogWrite(in3, 255);
    analogWrite(in4, 0);
  }
}

int deltaDistance(int x, int y)
{
  //Serial.println(x-y);
  int val;
  val = (x-y);
  if ((val > 0) && (abs(val) > 10))
  {
    motorControl(1);
  } 
  else if ((val < 0) && (abs(val) > 10))
  {
    motorControl(-1);
  }
  else
  {
    motorControl(0);
  }
}

void setup()
{
  Serial.begin(9600);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(trigOne, OUTPUT);
  pinMode(trigTwo, OUTPUT);
  pinMode(echoOne, INPUT);
  pinMode(echoTwo, INPUT);
  pinMode(irOne, INPUT);
  pinMode(irTwo, INPUT);
}

void loop()
{
  delay(500); // experimentella värden
  int distanceOne;
  int distanceTwo;
  int var1, var2;
  distanceOne = distanceRead(trigOne, echoOne);
  distanceTwo = distanceRead(trigTwo, echoTwo);
  var1 = colorRead(irOne);
  var2 = colorRead(irTwo);
  Serial.print(var2);
  if ((var1 && var2) == true)
  {
    deltaDistance(distanceOne, distanceTwo);
  }
  else if ((var2 &&! var1) == true)
  {
    motorControl(1);
  }
  else if((var1 &&! var2) == true)
  {
    motorControl(-1);
  }
  else if ((var1 && var2) == false)
  {
    systemFail();
  }
}
