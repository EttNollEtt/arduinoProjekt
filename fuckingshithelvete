#define trigOne 7
#define echoOne 8
#define trigTwo 3
#define echoTwo 4
#define irOne 13
#define irTwo 12
#define in1 6
#define in2 5
#define in3 10
#define in4 11

// abandon all hope, ye who enter

void backa(){
  digitalWrite(in1, 0);
  digitalWrite(in2, 255);
  digitalWrite(in3, 0);
  digitalWrite(in4, 255);
}

void systemFail(){
  int savedOne;
  int savedTwo;
  backa();
  delay(100);
  savedOne = colorRead(irOne);
  savedTwo = colorRead(irTwo);
  while ((savedOne && savedTwo) != true) {
    backa();
  }
  delay(100);
  digitalWrite(in1, 0);
  digitalWrite(in2, 0);
  digitalWrite(in3, 0);
  digitalWrite(in4, 0);
}

long distanceRead(int x, int y){
  int var;
  int distance;
  digitalWrite(x, LOW);
  delayMicroseconds(2);
  digitalWrite(x, HIGH);
  delayMicroseconds(8);
  digitalWrite(x, LOW);
  var = pulseIn(y, HIGH);
  distance = (var * 0.034 / 2);
  if (distance > 15) {
    motorControl(0);
  }
  return distance;
}

int colorRead(int x){
  int val;
  int ny;
  val = analogRead(x);
  delay(5);
  ny = analogRead(x);
  if ((val - ny) > 50){
    return true;
  } else {
    return false;
  }
}

void motorControl(int x) {
  if (x == 1) {
    analogWrite(in1, 255);
    analogWrite(in2, 0);
    analogWrite(in3, 0);
    analogWrite(in4, 255);
  } else if (x == -1) {
    analogWrite(in1, 0);
    analogWrite(in2, 255);
    analogWrite(in3, 255);
    analogWrite(in4, 0);
  } else if (x == 0) {
    analogWrite(in1, 255);
    analogWrite(in2, 0);
    analogWrite(in3, 255);
    analogWrite(in4, 0);
  }
}

int deltaDistance(int x, int y) {
  if (((x > y)) && ((x - y) > 5)) {
    motorControl(1);
  } else if (((x < y)) && ((y - x) > 5)) {
    motorControl(-1);
  } else {
    motorControl(0);
  }
}

void setup(){
  Serial.begin(9600);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(trigOne, OUTPUT);
  pinMode(trigTwo, OUTPUT);
  pinMode(echoOne, INPUT);
  pinMode(echoTwo, INPUT);
  pinMode(irOne, INPUT);
  pinMode(irTwo, INPUT);
}

void loop(){
  delay(10);
  int distanceOne;
  int distanceTwo;
  if (colorRead(irOne) == true && colorRead(irTwo) == true) {
    systemFail();
  } else if ((colorRead(irOne) &&! colorRead(irTwo) == true)) {
    motorControl(1);
  } else if ((colorRead(irTwo) &&! colorRead(irOne) == true)) {
    motorControl(-1);
  } else {
    distanceOne = distanceRead(trigOne, echoOne);
    distanceTwo = distanceRead(trigTwo, echoTwo);
    deltaDistance(distanceOne, distanceTwo);
  }
}
